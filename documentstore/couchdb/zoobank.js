{"_id":"_design/zoobank","_rev":"9-300015ee37b0f18b40d95795abc4b347","views":{"elastic":{"map":"//----------------------------------------------------------------------------------------\n// START COUCHDB VIEW\n\n//----------------------------------------------------------------------------------------\nfunction removeTags(string, array){\n  return array ? string.split(\"<\").filter(function(val){ return f(array, val); }).map(function(val){ return f(array, val); }).join(\"\") : string.split(\"<\").map(function(d){ return d.split(\">\").pop(); }).join(\"\");\n  function f(array, value){\n    return array.map(function(d){ return value.includes(d + \">\"); }).indexOf(true) != -1 ? \"<\" + value : value.split(\">\")[1];\n  }\n}\n\n//----------------------------------------------------------------------------------------\nfunction add_values(elastic_search_doc, key, value, boost) {\n\telastic_search_doc.search_data.fulltext_values.push(value);\n\t\n\tboosted = (typeof boost !== 'undefined') ?  boost : false;\n\t\n\tif (boosted) {\n\t\telastic_search_doc.search_data.fulltext_boosted_values.push(value);\n\t}\n\t\n\tswitch (key) {\n\t\tcase 'container':\n\t\tcase 'author':\n\t\t\telastic_search_doc.search_data[key].push(value);\n\t\t\tbreak;\n\n\t\tcase 'year':\n\t\t\telastic_search_doc.search_data[key] = value;\n\t\t\tbreak;\n\t\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\t\n\treturn elastic_search_doc;\n}\n\n//----------------------------------------------------------------------------------------\nfunction message(doc) {\n  if (doc.message) {\n\n    var elastic_search_doc = {};\n    \n    elastic_search_doc.id = doc._id;\n  \n    // type of document\n    elastic_search_doc.type = 'work';\n    \n\t// output to display in list of hits\n\telastic_search_doc.search_result_data = {};\n\t\n\t// possible fields to hold information on how to display this object\n\telastic_search_doc.search_result_data.name = '';\n\telastic_search_doc.search_result_data.description = '';\n\telastic_search_doc.search_result_data.creator = [];\n\telastic_search_doc.search_result_data.thumbnailUrl = '';\n\telastic_search_doc.search_result_data.url = '';\n\t\n\t// temporary\n\t//elastic_search_doc.search_result_data.description_parts = [];\n\t\n\t/*\n\tif ($url)\n\t{\n\t\t$doc->search_result_data->url = $url;\n\t}\n\t*/\n\n\t// fields that will be searched on\n\telastic_search_doc.search_data = {};\n\t\n\tif (doc.cluster_id) {\n\t  elastic_search_doc.search_data.cluster_id = doc.cluster_id;\n\t} \t\n\t\n\t// text fields for searching on\n\telastic_search_doc.search_data.fulltext_values = [];\n\telastic_search_doc.search_data.fulltext_boosted_values = [];\n\t\n\t// things to use as facets\n\telastic_search_doc.search_data.container = [];\n\telastic_search_doc.search_data.author = [];\n\telastic_search_doc.search_data.year = null;\n\telastic_search_doc.search_data.subject = [];\n\t\n\t// title (don't index this as everything is in the label field anyway)\n\tif (doc.message.title) {\n\t\telastic_search_doc.search_result_data.name = removeTags(doc.message.title);\n\t}\n\t\n\t// complete citation\n\tif (doc.message.label) {\n\t\telastic_search_doc = add_values(elastic_search_doc, 'label', doc.message.label, true);\n\t}\n\n\tif (doc.message.citationdetails) {\n\t\telastic_search_doc.search_result_data.description = removeTags(doc.message.citationdetails);\n\t}\n\n\t// parentreference\n\tif (doc.message.parentreference) {\n\t\telastic_search_doc.search_data['container'].push(doc.message.parentreference)\t\t\n\t} \n\n\t// date\n\tif (doc.message.year) {\n\t\telastic_search_doc.search_data.year = parseInt(doc.message.year);\n\t} \n\t\n\t// referenceuuid\n\tif (doc.message.referenceuuid) {\n\t\telastic_search_doc = add_values(elastic_search_doc, 'uuid', doc.message.referenceuuid);\t\t\n\t} \n\n\t// DOI\n\tif (doc.message.doi) {\n\t\telastic_search_doc = add_values(elastic_search_doc, 'doi', doc.message.doi);\t\t\n\t\t\n\t\telastic_search_doc.search_result_data.doi = doc.message.doi;\n\t} \n\t\n\t// authors\n\tif (doc.message.authors) {\n\t\tfor (var i in doc.message.authors) {\n\t\t\tvar name = [];\n\t\t\t\n\t\t\tif (doc.message.authors[i][0].givenname) {\n\t\t\t\tname.push(doc.message.authors[i][0].givenname);\n\t\t\t}\n\n\t\t\tif (doc.message.authors[i][0].familyname) {\n\t\t\t\tname.push(doc.message.authors[i][0].familyname);\n\t\t\t}\n\t\t\t\n\t\t\tif (name.length > 0) {\n\t\t\t\telastic_search_doc.search_data['author'].push(name.join(' '));\n\t\t\t\telastic_search_doc.search_result_data['creator'].push(name.join(' '));\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\t\n\t// \n\t\n\tif (doc.message.NomenclaturalActs) {\n\t\tfor (var i in doc.message.NomenclaturalActs) {\n\t\t\telastic_search_doc = add_values(elastic_search_doc, 'subject', doc.message.NomenclaturalActs[i].namestring);\n\t\t\t\n\t\t\telastic_search_doc.search_data.subject.push(doc.message.NomenclaturalActs[i].namestring);\n\t\t\t\n\t\t}\n\t\n\t}\n\n\t\n\n\t//------------------------------------------------------------------------------------\n\t\n\t// cleanup\n\telastic_search_doc.search_data.fulltext = elastic_search_doc.search_data.fulltext_values.join(' ');\n\tdelete elastic_search_doc.search_data.fulltext_values;\n\n\telastic_search_doc.search_data.fulltext_boosted = elastic_search_doc.search_data.fulltext_boosted_values.join(' ');\n\tdelete elastic_search_doc.search_data.fulltext_boosted_values;\n\t\n\t//elastic_search_doc.search_result_data.description = 'Published ' + elastic_search_doc.search_result_data.description_parts.join(', ');\n\t//delete elastic_search_doc.search_result_data.description_parts;\n\t\n\tif (!elastic_search_doc.search_result_data.creator) {\n\t\tdelete elastic_search_doc.search_result_data.creator;\n\t}\n\t\n\tif (!elastic_search_doc.search_result_data.thumbnailUrl) {\n\t\tdelete elastic_search_doc.search_result_data.thumbnailUrl;\n\t}\n\n\tif (!elastic_search_doc.search_result_data.url) {\n\t\tdelete elastic_search_doc.search_result_data.url;\n\t}\n\t\n\t//$('#jsonld').html(JSON.stringify(elastic_search_doc, null, 2));\n\temit(doc._id, elastic_search_doc);\n    \n\n  }\n}\n\nfunction (doc) {\n  if (doc['message-format']) {\n\n    // Zoobank\n    if (doc['message-format'] === 'application/vnd.zoobank+json') {\n      message(doc);\n    }\n\n\n  }\n}\n\n// END COUCHDB VIEW"},"modified":{"map":"function (doc) {\n  if (doc['message-format']) {\n    if (doc['message-format'] === 'application/vnd.zoobank+json') {\n      emit(doc['message-modified'], doc._id);\n    }\n  }\n}"}},"language":"javascript"}
